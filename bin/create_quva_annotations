#!/usr/bin/env python

import os
import os.path as osp
import json

import numpy as np
import click
from tqdm import tqdm


def process_path(path):
    path = osp.expanduser(path)
    path = osp.abspath(path)
    return path


def create_example_0_index_1_diff_full_video(
    data_dir,
    entry,
    **kwargs,
):
    method = "0-index-1-diff-full-video"
    subset = {}

    # read annotations
    timestamps = np.load(osp.join(
        data_dir, 'annotations', entry['prefix'] + '.npy'))
    count = len(timestamps)

    # create the true caption from the template
    template = entry['templates'][0]
    caption = template.replace('<number>', str(count))

    start_time, end_time = 0, int(timestamps[-1])
    item_id = f'{method}-{entry["id"]}-{start_time}-{end_time}'

    foils, foiling_methods, classes_foils = [], [], []

    # -1 foil
    foils.append(template.replace('<number>', str(count-1)))
    foiling_methods.append('-1')
    classes_foils.append(count-1)

    # +1 foil
    foils.append(template.replace('<number>', str(count+1)))
    foiling_methods.append('+1')
    classes_foils.append(count+1)

    subset[item_id] = {
        'dataset': 'QUVA',
        'original_split': 'test',
        'dataset_idx': entry['id'],
        'youtube_id': None,
        'video_file': entry['prefix'] + '.mp4',
        'start_time': start_time,
        'end_time': end_time,
        'time_unit': 'pts',
        'caption': caption,
        'foils': foils,
        'foiling_methods': foiling_methods,
        'template': template,
        'classes': count,
        'classes_foils': classes_foils,
    }

    return subset


METHODS = {
    '0-index-1-diff-full-video': create_example_0_index_1_diff_full_video,
}


@click.command()
@click.option(
    '--input-file',
    type=click.Path(file_okay=True, exists=True, resolve_path=True),
    required=True,
)
@click.option(
    '--output-file',
    type=click.Path(writable=True, file_okay=True, resolve_path=True), 
    required=True,
)
@click.option(
    '--data-dir',
    type=click.Path(dir_okay=True, exists=True, resolve_path=True),
    required=True,
)
@click.option(
    '--method',
    type=click.Choice(choices=METHODS.keys()),
    default='0-index-1-diff-full-video',
    required=True,
)
@click.option(
    '--seed',
    type=int,
    default=42,
    required=True,
)
def main(input_file, output_file, data_dir, method, seed):
    input_file = process_path(input_file)    
    output_file = process_path(output_file)
    data_dir = process_path(data_dir)

    with open(input_file, 'r') as f:
        raw_data = json.load(f)
    
    data = {}
    for _, item in tqdm(raw_data.items()):
        subset = METHODS[method](data_dir, item)
        data.update(subset)
    
    with open(output_file, 'w') as f:
        json.dump(data, f, indent=4)



if __name__ == "__main__":
    main()